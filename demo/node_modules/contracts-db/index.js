const SDK = require('dat-sdk')
const { Hypercore, Hyperdrive, resolveName, deleteStorage, destroy } = SDK()

module.exports = contractsDB

function contractsDB (daturl) {
  // ADD MOLOCH DAO - for the demo @TODO remove after the demo
  // const moloch = require('./moloch-demo.sol')
  // contracts.push({
  //   source: moloch,
  //   title: 'Moloch.sol',
  //   hash: '0x1234567345678903456'
  // })

  const archive = Hyperdrive(daturl)
  return { getAllPaths, getData }

  function get (query, done) {
    // const match = []
    // const formattedSources = [...contracts]
    // for (var i = 0; i < contracts.length; i++) {
    //   const temp = formattedSources[i].source.replace(/\n. |\r/g, "")
    //   const target = formattedSources[i]
    //   if (temp.includes(query)) {
    //     match.push({
    //       source: target.source,
    //       title: target.title,
    //       hash: target.hash
    //     })
    //   }
    // }
    // done(match, match.length)
  }
    // retrieve all file paths
  function getAllPaths (done) {
    console.log('Retreiving data from the P2P database')
    archive.ready(() => {
      archive.readdir('.', (err, filePaths) => {
        if (err) return done(err)
        done(null, filePaths)
      })
    })
  }

  function getData (filePaths, done) {
    const contracts = []
    const counter =filePaths.length
    if (filePaths) {
      for (var i=0; i<counter; i++) {
        getFile(contracts, counter, filePaths[i], done)
      }
    }
  }

  // get data
  function getFile (contracts, counter, filepath, done) {
    archive.readFile(filepath, 'utf8', (err, result) => {
      if (err) return done(err) // console.log(err)
      const data = JSON.parse(result)
      contracts.push({
        source: data.sourceCode,
        title: data.contractName,
        hash: data.address
      })
      console.log(`Contracts retreived: ${contracts.length}`)
      if (counter === contracts.length) done(null, contracts)
    })
  }
}
