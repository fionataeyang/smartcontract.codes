const bel = require('bel')
var csjs = require('csjs-inject')
const notify = require('notify')
const copy = require('copy-text-to-clipboard')
const icon = require('icon')
const svg = require('./svg.json')

module.exports = copyToClipboard

let notifyModal

function copyToClipboard(hash) {
    let copyIcon = bel`<span class="${css['icon-duplicate']}"
      title="Copy address">${icon('duplicate', svg.duplicate)}</span>`
    let message = "Contract address successfully copied"
    copyIcon.onclick = (event) => {
        event.stopPropagation()
        let copiableContent
        try {
            copiableContent = hash
        } catch (e) {
            console.log('copy failed: ', e.message)
            return
        }
        if (copiableContent) {
            copy(copiableContent)
            // set new notify message
            let notification = notify(message)
            // if notifyModal is null, then add it on the page
            if (notifyModal == null) {
                notifyModal = bel`<div id="notify" class=${css.notifyModal}"></div>`
                document.body.appendChild(notifyModal)
            }
            // select #notify after notifyModal created.
            let target = document.querySelector('#notify')
            notification.classList.add(css.show)
            // implement many notifies in notifyModal
            target.appendChild(notification)
            // to make each notify will be slowly disappeared.
            setTimeout(function(){
                notification.classList.remove(css.show)
                notification.classList.add(css.hide)
                setTimeout(function() {
                    target.removeChild(notification)
                }, 900)
            }, 2500)
        }
    }

    return copyIcon

  }

let css = csjs`
  .notifyModal {
    position: fixed;
    left: 0;
    bottom: 20px;
    width: 100%;
    display: grid;
    justify-items: center;
    z-index:999;
  }
  .icon-duplicate {
    cursor: pointer;
    position: absolute;
    right: 5px;
    bottom: -8px;
    width: 22px;
  }
  .icon-duplicate svg g {
    fill: var(--card-icon-fill);
  }
  .show {
    animation: show 1s
  }
  .hide {
    animation: hide 1s
  }
  @keyframes show {
    from { opacity: 0}
    to { opacity: 1}
  }
  @keyframes hide {
    from { opacity: 1}
  |  to { opacity: 0}
  }
`
