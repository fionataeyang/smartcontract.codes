const bel = require('bel')
const csjs = require('csjs-inject')
const icon = require('icon')
const svg = require('./svg.json')
const search = require('search')
const makeCollectionArea = require('makeCollectionArea')
const themeSwitcher = require('themeSwitcher')
const getCurrentPage = require('getCurrentPage')

module.exports = header

function header (db, notify) {
  let activeSession

  const filters = bel`
  <ul class=${css.filters} onclick=${(e) => focus(e, filters)}>
    <li><a href="#" class=${css.current}">Source Codes</a></li>
    <li><a href="#">Address</a></li>
    <li><a href="#">Titles</a></li>
    <li><a href="#">Populars</a></li>
    <li><a href="#">Audited</a></li>
    <li><a href="#">Beginner</a></li>
  </ul>`
  return bel`<header class="${css.header}">
    <div class="${css.logo}" onclick=${home}>
      <img src="src/assets/images/logo-1.png" alt="smartcontract.codes">
    </div>
    ${search(action => {
        if (action.type === 'search') {
          const query = action.body
          console.log(`Starting search query: ${query}`)
          const searchSession = { query, results: [], cards: 0 }
          if (activeSession) db.cancel(activeSession.id)
          searchSession.id = db.search( (query, action) => {
            listenSearch(searchSession, action)
          })
          activeSession = searchSession
        }
      })
    }
    <button class="${css.button} ${css.default} ${css.hamburger}" onclick=${() => menuOpen()}>
      <span class=${css['icon-hamburger']}>${icon('hamburger', svg.hamburger)}</span>
    </button>
    <nav class="${css.nav}">
      <div class=${css.pagination}>
        <button class="${css.button} ${css.default} ${css.previous}">
          <span class=${css['icon-arrow-left']}>${icon('arrow-left', svg.arrowLeft)}</span>
        </button>
        <div class=${css.pageInfo}>
          <input type="text" value="1" class=${css.number}> / 250
        </div>
        <button class="${css.button} ${css.default} ${css.next}">
          <span class=${css['icon-arrow-right']}>${icon('arrow-left', svg.arrowRight)}</span>
        </button>
      </div>
      ${themeSwitcher(notify)}
      <a href="#">
        <span class="${css.avatar}">
          <img src="src/assets/images/user-avatar.jpg" alt="User Avatar">
        </span>
      </a>
      <button class="${css.button} ${css.default}">
        <span class=${css['apps']}>
          ${icon('apps', svg.apps)}
        </span>
      </button>
    </nav>
    
    <nav class=${css["top-nav"]}>${filters}</nav>
  </header>`

  
}
function home () {
  location.href = `${window.location.origin}${window.location.pathname}`
}

function menuOpen() {
  return 
  const nav = document.querySelector(`.${css.nav}`)
  nav.style.display = 'block'
}
function focus(e, filters) {
  const el = e.target
  if (el.classList.contains(css.current)) return
  if (el.parentNode.nodeName === "LI") {
    let filter = el
    let links = filter.parentNode.parentNode.querySelectorAll('a')
    links.forEach( link => {
      if (link.classList.contains(css.current))
        link.classList.remove(css.current)      
    })
    filter.classList.add(css.current)
  }
   
}
const css = csjs`
.header {
  grid-area: header;
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 62px 1fr auto;
  padding: 8px 12px;
  background-color: var(--header-background);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  width: calc(100% - 24px);
}
.logo {
  width: 62px;
}
.logo:hover {
  cursor: pointer;
}
.nav {
  display: grid;
  grid-template: 1fr / repeat(5, auto);
  grid-gap: 8px;
  justify-content: end;
  align-items: center;
}
.avatar {
  display: inline-block;
  width: 45px;
  height: 45px;
  border-radius: 100px;
  background-color: #333;
  overflow: hidden;
  margin-left: 15px;
}
.pagination {
  display: grid;
  grid-template: 1fr / 1fr auto 1fr;
  grid-gap: 5px;
  padding-right: 30px;
}
.button {
  font-size: var(--button-default-font-size);
  vertical-align: middle;
  width: 36px;
  height: 36px;
}
.default {
  padding: 6px;
  color: var(--button-default-text);
  background-color: transparent;
  box-shadow: none;
  border: none;
  transition: background-color .3s ease-in-out;
  -webkit-transition: background-color .3s ease-in-out;
  -moz-transition: background-color .3s ease-in-out;
  -o-transition: background-color .3s ease-in-out;
}
.default:hover {
  background-color: var(--button-default-hover);
  color:  var(--button-default-text-hover);
  cursor: pointer;
}
.button span {
  display: inline-block;
  vertical-align: text-top;
}
.button span svg g {
  fill: var(--button-icon-fill);
  transition: fill .3s ease-in-out;
  -webkit-transition: fill .3s ease-in-out;
  -moz-transition: fill .3s ease-in-out;
  -o-transition: fill .3s ease-in-out;
}
.previous {
  border: none;
  background: transparent;
}
.pageInfo {
  font-size: 14px;
}
.number {
  font-size: 14px;
  text-align: center;
  border-radius: 4px;
  border: var(--number-border);
  color: var(--number-color);
  background-color: var(--number-background);
  padding: 8px 6px;
  margin-right: 5px;
  max-width: 50px;
}
.apps {
}
.icon-arrow-left,  .icon-arrow-right {
}
.hamburger {
  display: none;
}
.icon-hamburger {

}
.top-nav {
  grid-row-start: 2;
  grid-row-end: 2;
  grid-column-start: 1;
  grid-column-end: 4;
  padding-left: 45px;
}
.filters {
  display: flex;
}
.filters li {
  margin: 0 20px;
}
.filters li a {
  font-size: 14px;
  padding: 8px 0px;
}
.current {
  border-bottom: 2px solid #6700FF;
}
@media (max-width: 960px) {
  .header {
    grid-template-columns: 62px 1fr auto;
    padding: 8px 2% 14px 2%;
    width: calc(100% - 4%);
  }
}
@media (max-width: 768px) {
  .nav {
    display: none;
  }
  .hamburger {
    display: none;
    align-self: center;
  }

  .filters li { 
    margin: 0 2%;
  }
  .filters li a {
    font-size: 12px;
  }
}
`
