const bel = require('bel')
const csjs = require('csjs-inject')

var notifyModal

module.exports = notify

function notify (msg) {
  if (!notifyModal) {
    notifyModal = bel`<div id="notify" class=${css.notifyModal}"></div>`
    document.body.appendChild(notifyModal)
  }
  if (typeof msg === 'string') msg = { type: 'ok', body: msg }
  if (msg.type === 'error') console.error(msg.body)
  const notification = bel`<div class="${css.notify} ${css.show}">
    ${msg.body}
  </div>`
  notifyModal.appendChild(notification)
  setTimeout(function(){
    notification.classList.remove(css.show)
    notification.classList.add(css.hide)
    setTimeout(() => notifyModal.removeChild(notification), 900)
  }, 2500)
}

const css = csjs`
.notify {
  width: 30%;
  margin-bottom: 5px;
  padding: 8px;
  text-align: center;
  border-radius: 4px;
  -webkit-box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);
  box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);
  background-color: var(--notify-background-color);
  color: #000;
  font-size: 1.4rem;
}
.notifyModal {
  position: fixed;
  left: 0;
  bottom: 20px;
  width: 100%;
  display: grid;
  justify-items: center;
  z-index:999;
}
.show {
  animation: show 1s
}
.hide {
  animation: hide 1s
}
@keyframes show {
  from { opacity: 0}
  to { opacity: 1}
}
@keyframes hide {
  from { opacity: 1}
  to { opacity: 0}
}
@media (max-width: 960px) {
  .notify {
    width: 50%;
  }
}
@media (max-width: 768px) {
  .notify {
    width: 65%;
  }
}`
