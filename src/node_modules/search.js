const bel = require('bel')
const csjs = require('csjs-inject')
const pagination = require('pagination')
const makeCollectionArea = require('makeCollectionArea')

module.exports = search

function search (contracts,collectionContainer, ops) {
  return bel`
    <div class=${css.searchBar}>
      <input type="text" value="Search contract" onchange=${(e)=>showMatches(e, contracts, collectionContainer)} onclick="${(e)=>e.target.select()}">
    </div>
  `
}

// ===== helpers =====

function showMatches (e, contracts, collectionContainer) {
  //location.assign(window.location.href)
  let val = e.target.value
  let matchingContracts = getMatches(contracts, val)
  let ops = pagination(matchingContracts)
  const old = collectionContainer.children[0]
  collectionContainer.replaceChild(makeCollectionArea(ops.currentData), old)
}

function getMatches (contracts, val) {
  let match = []
  for(var i=0; i<contracts.length; i++) {
    if (contracts[i].includes(val)) match.push(contracts[i])
  }
  return match
}



// ===== css =====

css = csjs`
  .searchBar {
    margin: 40px 0 20px 0;
    display: flex;
    justify-content: center;
  }
  input[type="text"] {
    height: 40px;
    width: 80%;
    border: 1px solid var(--search-input-border);
    border-radius: 5px;
    background-color: var(--search-input-background);
    font-size: var(--font-size-large);
    padding-left: 15px;
  }
`
