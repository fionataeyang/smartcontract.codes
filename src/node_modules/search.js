const bel = require('bel')
const csjs = require('csjs-inject')

module.exports = search

function search (notify) {
  const searchArea = bel`<div contenteditable="true" class=${css.textarea}"
    onclick=${(e) => select(e)}
    onkeyup=${(e) => trigger(e, notify, searchArea)}
    onkeypress=${(e) => preventDefault(e)}>
  </div>`
  return bel`<div class=${css.searchBar}>
    ${searchArea}
    <button class=${css.submit}
      onclick=${()=>searchContracts(notify, searchArea)}>
      search contracts
    </button>
  </div>`
}
function getSearchInput (searchArea) {
  let searchInput = searchArea.innerText.trim()
  searchInput = searchInput.replace(/\n. |\r/g, "")
  return searchInput
}
function select (el) {
  const range = document.createRange()
  range.selectNodeContents(el.target)
  const sel = window.getSelection()
  sel.removeAllRanges()
  sel.addRange(range)
}
function preventDefault (e) {
  const keyCode = e.keyCode
  if (keyCode === 13 && !e.shiftKey) e.preventDefault()
}
function trigger (e, notify, searchArea) {
  const keyCode = e.keyCode
  if (keyCode === 13 && !e.shiftKey) return searchContracts(notify, searchArea)
  if (keyCode === 27) return clearSearch()
}
function searchContracts (notify, searchArea) {
  const query = getSearchInput(searchArea)
  return notify({ type: 'search', body: query })
}
function clearSearch () {
  searchArea.innerText = ''
}
const css = csjs`
  .searchBar {
    margin: 0 auto 50px auto;
    width: 650px;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto 36px;
    justify-items: center;
  }
  .submit {
    font-size: var(--text-normal);
    background: var(--search-button-background);
    width: 250px;
    cursor: pointer;
    border-radius: var(--search-button-border-radius);
    transition: all .3s ease-in-out;
  }
  .submit:hover {
    color: var(--search-button-color);
    background-color: var(--search-button-hover-background);
  }
  .textarea {
    width: calc(100% - 65px);
    border-radius: 4px;
    border: var(--search-input);
    background: var(--search-input-background);
    font-size: var(--search-input-text);
    font-family: var(--code-font);
    padding: 15px;
    color: var(--body-color);
    word-break: break-all;
    margin-bottom: 10px;
    outline: none;
    min-height: 15px;
    max-width: 600px;
  }
  @media (max-width: 960px) {
    .searchBar {
      width: 60%;
    }
  }
  @media (max-width: 640px) {
    .searchBar {
      width: 100%;
    }
  }
`
