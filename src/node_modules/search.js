const bel = require('bel')
const csjs = require('csjs-inject')
let css
const pagination = require('pagination')
const paginationButtons = require('paginationButtons')
const makeCollectionArea = require('makeCollectionArea')
const icon = require('icon')
const svg = require('./svg.json')

module.exports = search

function search (ops) {
  return bel`
    <div contenteditable="true" class=${css.searchBar}>
      <input type="text" value="Search contract"
        onchange=${(e)=>showMatches(e, ops)}"
        onclick="${(e)=>e.target.select()}">
      <button class=${css.submit}>
        <span class=${css.icon_search}>${icon('search', svg.search)}</span>
      </button>
    </div>
  `
}

function showMatches (e, ops) {
  let contracts = ops.contracts
  const noResult = bel`<div>No matches found</div>`
  let val = e.target.value
  let matchingContracts = getMatches(contracts, val)

  // new Collection Area based on search results
  newOps = pagination(matchingContracts)
  newOps.contracts = matchingContracts
  newOps.paginationButtons = ops.paginationButtons
  const oldContainer = document.querySelector("[class^='collectionArea']")
  let container = oldContainer.parentNode
  let newContainer = matchingContracts.length > 0 ?
    makeCollectionArea(newOps)
    : noResult
  container.replaceChild(newContainer, oldContainer)

  // new navigation (paginationButtons) based on number of matching search results
  debugger
  let navigation = ops.paginationButtons
  const oldNavigation = navigation.children[0]
  navigation.replaceChild(paginationButtons(container, newOps), oldNavigation)

  let url = `${window.location.origin}${window.location.pathname}?page=1`
  history.pushState(null, null, url)
}

function getMatches (contracts, val) {
  let match = []
  for(var i=0; i<contracts.length; i++) {
    if (contracts[i].includes(val)) match.push(contracts[i])
  }
  return match
}


// ===== css =====

css = csjs`
  .searchBar {
    position: relative;
    padding-bottom: 50px;
  }
  input[type="text"] {
    height: 40px;
    width: calc(100% - 65px);
    border: var(--search-input);
    border-radius: 6px;
    background: var(--search-input-background);
    font-size: var(--search-input-text);
    padding: 4px 50px 4px 15px;
    color: var(--search-input-color);
    outline: none;
  }
  ::placeholder {
    text-transform: uppercase;
    color: var(--search-input-color);
  }
  .submit {
    position: absolute;
    right: 5px;
    top: 5px;
    background: transparent;
    width: 40px;
    height: 40px;
    cursor: pointer;
  }
  .icon_search g {
    fill: var(--search-icon-fill);
    transition: all .3s ease-in-out;
  }
`
